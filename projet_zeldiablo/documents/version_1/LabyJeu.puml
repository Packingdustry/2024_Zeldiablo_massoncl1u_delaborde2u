@startuml
package moteurJeu {

interface Jeu{
+ init()
+ update(seconds: double, clavier: Clavier)
+ etreFini(): boolean
}


interface DessinJeu {
+ dessinerJeu(jeu: Jeu, canvas: Canvas)
}
}

package gameLaby{

class LabyJeu{
+ {static} WIDTH : int
+ {static} HEIGHT : int
+ {static} FICHIER : String
+ LabyJeu()
+ init() : void
+ update(seconds: double, clavier: Clavier) : void
+ etreFini(): boolean
+ getLabyrinthe() : Labyrinthe
}

class Labyrinthe {
  + MUR : char
  + PJ : char
  + MONSTRE : char
  + VIDE : char
  + HAUT : String
  + BAS  : String
  + GAUCHE : String
  + DROITE : String
  + murs : boolean[][]
  + Labyrinthe(String)
  + {static} getSuivant(int, int, String) : int[]
  + deplacerPerso(String) : void
  + etreFini() : boolean
  + getLengthY() : int
  + getLength() : int
  + getMur(int, int) : boolean
  + getMonstre(int, int) : Monstre
  + verifierMonstre()
  + getPerso(int, int) : Perso
}


Jeu <|.. LabyJeu


LabyJeu "1" --> "1" Labyrinthe : -labyrinthe


class LabyDessin{
+ dessinerJeu(jeu: Jeu, canvas: Canvas)
}

DessinJeu <|.. LabyDessin
LabyJeu <. LabyDessin:uses

class Perso {
  - x : int
  - y : int
  + Perso(int, int, int)
  + etrePresent(int, int) : boolean
  + getX() : int
  + getY() : int
  + getVie() : int
}

class Joueur #pink extends Perso{
  + Joueur(int, int, int)
  + subirDegats(int)
}

class Monstre #pink extends Perso {
  - degats : int
  + Monstre(int, int, int, int)
  + infligerDegat() : int
}
class Bombe #pink extends Perso {
  + Bombe(int, int, int)
  + mettreDegat(Perso p)
  + explose()
}
Labyrinthe "*" -> "*" Perso : + pj
}
@enduml
